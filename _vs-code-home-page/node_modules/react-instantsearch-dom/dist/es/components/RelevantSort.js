import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { createClassNames } from "../core/utils.js";
var cx = createClassNames('RelevantSort');

var DefaultButtonTextComponent = function DefaultButtonTextComponent(_ref) {
  var isRelevantSorted = _ref.isRelevantSorted;
  return /*#__PURE__*/React.createElement("span", null, isRelevantSorted ? 'See all results' : 'See relevant results');
};

var RelevantSort = function RelevantSort(_ref2) {
  var _ref2$className = _ref2.className,
      className = _ref2$className === void 0 ? '' : _ref2$className,
      isVirtualReplica = _ref2.isVirtualReplica,
      isRelevantSorted = _ref2.isRelevantSorted,
      _ref2$buttonTextCompo = _ref2.buttonTextComponent,
      ButtonTextComponent = _ref2$buttonTextCompo === void 0 ? DefaultButtonTextComponent : _ref2$buttonTextCompo,
      TextComponent = _ref2.textComponent,
      refine = _ref2.refine;
  return !isVirtualReplica ? null : /*#__PURE__*/React.createElement("div", {
    className: classNames(cx(''), className)
  }, /*#__PURE__*/React.createElement("div", {
    className: cx('text')
  }, TextComponent && /*#__PURE__*/React.createElement(TextComponent, {
    isRelevantSorted: isRelevantSorted
  })), /*#__PURE__*/React.createElement("button", {
    className: cx('button'),
    onClick: function onClick() {
      return refine(isRelevantSorted ? 0 : undefined);
    }
  }, /*#__PURE__*/React.createElement(ButtonTextComponent, {
    isRelevantSorted: isRelevantSorted
  })));
};

RelevantSort.propTypes = {
  buttonTextComponent: PropTypes.func,
  className: PropTypes.string,
  isVirtualReplica: PropTypes.bool.isRequired,
  isRelevantSorted: PropTypes.bool.isRequired,
  refine: PropTypes.func.isRequired,
  textComponent: PropTypes.func
};
export default RelevantSort;