export default rehypeRemark
export type Options = import('hast-util-to-mdast').Options
export type HastRoot = import('hast').Root
export type MdastRoot = import('mdast').Root
export type Processor = import('unified').Processor<any, any, any, any>
/**
 * Plugin to bridge or mutate to rehype.
 *
 * If a destination is given, runs the destination with the new mdast
 * tree (bridge-mode).
 * Without destination, returns the mdast tree: further plugins run on that
 * tree (mutate-mode).
 *
 * @param destination
 *   Optional unified processor.
 * @param options
 *   Options passed to `hast-util-to-mdast`.
 */
declare const rehypeRemark: import('unified').Plugin<
  [
    import('unified').Processor<any, any, any, any>,
    (import('hast-util-to-mdast/lib/types').Options | undefined)?
  ],
  import('hast').Root,
  import('hast').Root
> &
  import('unified').Plugin<
    [(import('hast-util-to-mdast/lib/types').Options | undefined)?] | void[],
    import('hast').Root,
    import('mdast').Root
  >
