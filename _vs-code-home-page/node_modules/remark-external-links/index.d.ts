/**
 * Plugin to automatically add `target` and `rel` attributes to external links.
 *
 * @type {import('unified').Plugin<[Options?]|void[], Root>}
 */
export default function remarkExternalLinks(
  options?: void | Options | undefined
):
  | void
  | import('unified').Transformer<import('mdast').Root, import('mdast').Root>
export type Root = import('mdast').Root
export type Properties = import('hast').Properties
export type ElementChild = import('hast').Element['children'][number]
/**
 * Configuration.
 */
export type Options = {
  /**
   * How to display referenced documents (`string?`: `_self`, `_blank`,
   * `_parent`, or `_top`, default: `_blank`).
   * Pass `false` to not set `target`s on links.
   */
  target?: false | '_self' | '_blank' | '_parent' | '_top' | undefined
  /**
   * Link types to hint about the referenced documents.
   * Pass `false` to not set `rel`s on links.
   *
   * > When using a `target`, add `noopener` and `noreferrer` to avoid
   * > exploitation of the `window.opener` API.
   */
  rel?: string | false | string[] | undefined
  /**
   * Protocols to check, such as `mailto` or `tel`.
   */
  protocols?: string[] | undefined
  /**
   * hast content to insert at the end of external links.
   * Will be inserted in a `<span>` element.
   *
   * Useful for improving accessibility by [giving users advanced warning when
   * opening a new window.
   */
  content?:
    | import('hast').Element
    | import('hast').Comment
    | import('hast').Text
    | (import('hast').Element | import('hast').Comment | import('hast').Text)[]
    | undefined
  /**
   * `Properties` to add to the `span` wrapping `content`, when given.
   */
  contentProperties?: import('hast').Properties | undefined
}
